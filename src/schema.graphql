
"objects are Pascal case, deils are camal case"


#e Query type's fields define which data clients can query from our schema.
# Query type are entry points into our schema. These are the top-level fields that a GraphQL consumer can query for.
type Query {
  "Playlists hand-picked to be featured to all users."
  featuredPlaylists: [Playlist!]! #array can be empty but not null
    #!) applied to the Playlist type inside array . This bit of syntax specifies that the list returned should either contain objects that adhere to the Playlist GraphQL type structure, or it should be empty. In other words, an array like [1,2,3] or [null, null] is not allowed!
}

"A curated collection of tracks designed for a specific activity or mood."
#object types define fields we can query for data.
type Playlist {
  "The ID for the playlist."
  id: ID!
  "The name of the playlist."
  name: String!
  "Describes the playlist, what to expect and entices the user to listen."
  description: String
}
